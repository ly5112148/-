#include<iostream>
#include<cstring>
#include<cstdio>
using namespace std;
/*
兵临城下
 卢卡斯的驱逐者大军已经来到了赫柏的卡诺萨城，赫柏终于下定决心,集结了大军,与驱逐者全面开战。
卢卡斯的手下有6名天之驱逐者，这6名天之驱逐者各赋异能，是卢卡斯的主力。
为了击败卢卡斯，赫柏必须好好考虑如何安排自己的狂战士前去迎战。
狂战士的魔法与一些天之驱逐者的魔法属性是相克的，第i名狂战士的魔法可以克制的天之驱逐者的集合为Si(Si中的每个元素属于[0,5])。
为了公平，两名狂战士不能攻击同一个天之驱逐者。
现在赫柏需要知道共有多少种分派方案。
例：
S1={01},S2={23}，代表编号为0的狂战士的魔法可以克制编号为0和编号为1的天之驱逐者，编号为1的狂战士的魔法可以克制编号为2和编号为3的天之驱逐者，共有四种方案：02,03,12,13。
02---代表第一个狂战士负责编号为0的驱逐者，第二个狂战士负责编号为2的驱逐者；
03---代表第一个狂战士负责编号为0的驱逐者，第二个狂战士负责编号为3的驱逐者；
12---代表第一个狂战士负责编号为1的驱逐者，第二个狂战士负责编号为2的驱逐者;
13---代表第一个狂战士负责编号为1的驱逐者，第二个狂战士负责编号为3的驱逐者;
S1={01},S2={01}，代表编号为0的狂战士的魔法可以克制编号为0和编号为1的天之驱逐者，编号为1的狂战士的魔法可以克制编号为0和编号为1的天之驱逐者，共有两种方案：01,10。
*/
string s[6];
int n;
int vis[6];
int ans;
void dfs(int p)
{
    if(p == n)
    {
        ans++;
        return;
    }
    for(int i =0; i < s[p].length(); i++)
    {
        if(vis[s[p][i]-'0'] == 0)
        {
            vis[s[p][i]-'0'] = 1;
            dfs(p+1);
            vis[s[p][i]-'0'] = 0;
        }
    }
}
int main()
{
    while(cin>>n)
    {
        ans =0;
        memset(vis,0,sizeof(vis));
        for(int i =0; i < n; i++)
            cin>>s[i];
        dfs(0);
        cout<<ans<<endl;
    }
}
